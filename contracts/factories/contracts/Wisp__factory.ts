/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Wisp, WispInterface } from "../../contracts/Wisp";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_levels",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "publicKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "Payment",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "isValidRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "levelHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSize",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "publicKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encryptedData",
        type: "bytes",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260008060016101000a81548163ffffffff021916908363ffffffff1602179055503480156200003257600080fd5b50604051620028c1380380620028c1833981810160405281019062000058919062000b51565b838360008260ff1611620000a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009a9062000c43565b60405180910390fd5b60208260ff1610620000ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e39062000cdb565b60405180910390fd5b816000806101000a81548160ff021916908360ff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900460ff16600262000156919062000e90565b63ffffffff1660a08163ffffffff168152505060005b8260ff168160ff161015620001c2576200018f8160ff16620002a260201b60201c565b600160008360ff1660ff168152602001908152602001600020819055508080620001b99062000ec5565b9150506200016c565b5050508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505060005b81518160ff1610156200029757600160036000848460ff168151811062000228576200022762000ef3565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200028e9062000ec5565b915050620001fc565b505050505062000f94565b6000808203620002d5577f131d73cf6b30079aca0dff6a561cd0ee50b540879abe379a25a06b24bde2bebd905062000920565b6001820362000307577f030e41eb4c13eb3c7040201a76ec17a95b0696ae684c8711f643a82434043b85905062000920565b6002820362000339577f2de9e35e5e66734c46a160df81e56c83d8b7687ea37f6b4a27623a787127fad8905062000920565b600382036200036b577f1ee3ac3d5ea557aa6d9a6ea46262dc42af62bae8c7864a9cc8dfb493d54bba30905062000920565b600482036200039d577f0bef9271bdaa22ee892e75171bf1898983a6c8304ab78da111413a4105733219905062000920565b60058203620003cf577f1b4bb8a6696efaa2cd20d4b47bf9dc585280dec286f06aedd01583a58c783f51905062000920565b6006820362000401577f2aabe03c18f20b72f67ade3063f12d71ad671d375d797ba60dfac9d924f02708905062000920565b6007820362000433577f2daff101798c30998276c67457a7baaaaed141e6e49a2310deb01a71e3ec107d905062000920565b6008820362000465577f1cafdb09713bb57e4aed4bee8f6d722a8e22c8ac51dafa7faf3b5585536b443e905062000920565b6009820362000497577f1d585d8e6fa2b1698a000c733e3c2c8a6baaf40166f82ee0412a266496bab85f905062000920565b600a8203620004c9577f2fa8177393423a5b0e68dbb8a555a9085464b5fe55219d377edb5a9a486b4f16905062000920565b600b8203620004fb577f1e9dbba95cdde33d36bc0cee03f7ebeddd71cdc633451d996a9cb83bc4faccad905062000920565b600c82036200052d577f0adacfac36026ca9936dd2e4d540a947a1a2cb2ce7114ddcb24a3956eae54880905062000920565b600d82036200055f577f1b08cd6df6cbf993b04b8b2e40882ca9aa48ca3afb074b88e52963f1c63f534b905062000920565b600e820362000591577f086043d5906d53b339d340d39738f2037541c5440073a481feb8b1f513b1f61e905062000920565b600f8203620005c3577f06108b01607231776eb7debff2f99da31dd70f4bcbeccc251843de92456d9464905062000920565b60108203620005f5577f10f9e234e1bb3ab0c5e979c489e0f82b08b74f4177a6fc85e08e5aac314de30e905062000920565b6011820362000627577f0432ad8ddfeffc1e806be483a4172fd3389aee0d322d5d0211da447be542dc1e905062000920565b6012820362000659577f06633a6d46c11662e3f69fcd309b73cc20bd47a870d778c20e661915874c2d30905062000920565b601382036200068b577f01a45cc8ac3691a5cab011322c3768c87051c572235a0cca492dff6909612077905062000920565b60148203620006bd577f279add35717f68d654619ffb44243d67f2e1085ae096b87da5f4e03b12c0198f905062000920565b60158203620006ef577f14abf2e9cc1540de67faffd47b74b2ff21db44fd5909c2c6dc0a7910183672d1905062000920565b6016820362000721577f014d77e356b2fc343bad244a2c7b82793b1d407624237045b8cdb73e58be4804905062000920565b6017820362000753577f10e949fa93056d968937b8b3990db726a22596ea35238a41af824cfa44d79309905062000920565b6018820362000785577f19c69248dcc169fb60a3dc50f25cbcfeff75f9876e76a76c7cc3356eee4746ba905062000920565b60198203620007b7577f126f559140de04a5b3074e0ecbb46c942fbf0fc1118e4cab0e509ec7942acdf4905062000920565b601a8203620007e9577f015a03f1243d220d72e914a76f815a66d0fae19bf83f7ed126124bb718b45638905062000920565b601b82036200081b577f0d234d5a13d6451120bf427a97a64a01b86122bc7056c9db235b4708d6257fd9905062000920565b601c82036200084d577f258f2eb745d4c7f43f7555fcd719408e4d484ed8ed1cf0a367410f24df079be0905062000920565b601d82036200087f577f2a7a8cb5c71e208c985ef3da812d40201012fdb07883372822b0a5c8c5e46a6d905062000920565b601e8203620008b1577f02dfa7a6426b9c6700075ef9d9a2a964f9e54e5643c78b14a6fddcff44e81e41905062000920565b601f8203620008e3577f136e847efd90cf461eac4b58b7f0fde18cf8564730c0b56ee7919be0816679a5905062000920565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009179062000f72565b60405180910390fd5b919050565b6000604051905090565b600080fd5b600080fd5b600060ff82169050919050565b620009518162000939565b81146200095d57600080fd5b50565b600081519050620009718162000946565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009a48262000977565b9050919050565b620009b68162000997565b8114620009c257600080fd5b50565b600081519050620009d681620009ab565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000a2c82620009e1565b810181811067ffffffffffffffff8211171562000a4e5762000a4d620009f2565b5b80604052505050565b600062000a6362000925565b905062000a71828262000a21565b919050565b600067ffffffffffffffff82111562000a945762000a93620009f2565b5b602082029050602081019050919050565b600080fd5b600062000ac162000abb8462000a76565b62000a57565b9050808382526020820190506020840283018581111562000ae75762000ae662000aa5565b5b835b8181101562000b14578062000aff8882620009c5565b84526020840193505060208101905062000ae9565b5050509392505050565b600082601f83011262000b365762000b35620009dc565b5b815162000b4884826020860162000aaa565b91505092915050565b6000806000806080858703121562000b6e5762000b6d6200092f565b5b600062000b7e8782880162000960565b945050602062000b9187828801620009c5565b935050604062000ba487828801620009c5565b925050606085015167ffffffffffffffff81111562000bc85762000bc762000934565b5b62000bd68782880162000b1e565b91505092959194509250565b600082825260208201905092915050565b7f5f6c6576656c732073686f756c642062652067726561746572207468616e2030600082015250565b600062000c2b60208362000be2565b915062000c388262000bf3565b602082019050919050565b6000602082019050818103600083015262000c5e8162000c1c565b9050919050565b7f5f6c6576656c732073686f756c64206e6f74206265206772656174657220746860008201527f616e203332000000000000000000000000000000000000000000000000000000602082015250565b600062000cc360258362000be2565b915062000cd08262000c65565b604082019050919050565b6000602082019050818103600083015262000cf68162000cb4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000d8b5780860481111562000d635762000d6262000cfd565b5b600185161562000d735780820291505b808102905062000d838562000d2c565b945062000d43565b94509492505050565b60008262000da6576001905062000e79565b8162000db6576000905062000e79565b816001811462000dcf576002811462000dda5762000e10565b600191505062000e79565b60ff84111562000def5762000dee62000cfd565b5b8360020a91508482111562000e095762000e0862000cfd565b5b5062000e79565b5060208310610133831016604e8410600b841016171562000e4a5782820a90508381111562000e445762000e4362000cfd565b5b62000e79565b62000e59848484600162000d39565b9250905081840481111562000e735762000e7262000cfd565b5b81810290505b9392505050565b600063ffffffff82169050919050565b600062000e9d8262000e80565b915062000eaa8362000939565b925062000ebd63ffffffff848462000d94565b905092915050565b600062000ed28262000939565b915060ff820362000ee85762000ee762000cfd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b600062000f5a60138362000be2565b915062000f678262000f22565b602082019050919050565b6000602082019050818103600083015262000f8d8162000f4b565b9050919050565b60805160a05160c0516118ef62000fd260003960006102ee0152600081816102b40152610c15015260008181610bef0152610da101526118ef6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636562be221161008c578063ce7597c911610066578063ce7597c914610204578063e486033914610234578063e829558814610264578063ed33639f14610294576100cf565b80636562be221461019a578063c2b40ae4146101b6578063cd87a3b4146101e6576100cf565b80632565b159146100d45780632986c0e5146100f25780632b7ac3f3146101105780632cdabbce1461012e578063414a37ba1461015e5780634ecf518b1461017c575b600080fd5b6100dc6102b2565b6040516100e99190610f3b565b60405180910390f35b6100fa6102d6565b6040516101079190610f3b565b60405180910390f35b6101186102ec565b6040516101259190610f97565b60405180910390f35b61014860048036038101906101439190610ff2565b610310565b604051610155919061103a565b60405180910390f35b6101666103bc565b6040516101739190611064565b60405180910390f35b6101846103e0565b604051610191919061109b565b60405180910390f35b6101b460048036038101906101af919061117d565b6103f1565b005b6101d060048036038101906101cb9190610ff2565b610557565b6040516101dd9190611064565b60405180910390f35b6101ee61056f565b6040516101fb919061109b565b60405180910390f35b61021e60048036038101906102199190611243565b610574565b60405161022b9190611064565b60405180910390f35b61024e60048036038101906102499190611270565b61058c565b60405161025b919061103a565b60405180910390f35b61027e60048036038101906102799190610ff2565b6105ac565b60405161028b9190611064565b60405180910390f35b61029c610bed565b6040516102a991906112fc565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600060019054906101000a900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080820361032257600090506103b7565b6000601e60ff16600060019054906101000a900463ffffffff166103469190611346565b905060008190505b83600260008363ffffffff1681526020019081526020016000205403610379576001925050506103b7565b60008163ffffffff160361038f57601e60ff1690505b808061039a906113a6565b9150508163ffffffff168163ffffffff160361034e576000925050505b919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900460ff1681565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104749061142c565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016104ba9392919061144c565b6020604051808303816000875af11580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd91906114af565b50600061050984610c11565b90507f9416a53b6670267da23a457380f36ea83962a032fa64286b7d2a79cfa354cc99878787878787876040516105469796959493929190611549565b60405180910390a150505050505050565b60026020528060005260406000206000915090505481565b601e81565b60016020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900460ff1681565b60008082036105dd577f131d73cf6b30079aca0dff6a561cd0ee50b540879abe379a25a06b24bde2bebd9050610be8565b6001820361060d577f030e41eb4c13eb3c7040201a76ec17a95b0696ae684c8711f643a82434043b859050610be8565b6002820361063d577f2de9e35e5e66734c46a160df81e56c83d8b7687ea37f6b4a27623a787127fad89050610be8565b6003820361066d577f1ee3ac3d5ea557aa6d9a6ea46262dc42af62bae8c7864a9cc8dfb493d54bba309050610be8565b6004820361069d577f0bef9271bdaa22ee892e75171bf1898983a6c8304ab78da111413a41057332199050610be8565b600582036106cd577f1b4bb8a6696efaa2cd20d4b47bf9dc585280dec286f06aedd01583a58c783f519050610be8565b600682036106fd577f2aabe03c18f20b72f67ade3063f12d71ad671d375d797ba60dfac9d924f027089050610be8565b6007820361072d577f2daff101798c30998276c67457a7baaaaed141e6e49a2310deb01a71e3ec107d9050610be8565b6008820361075d577f1cafdb09713bb57e4aed4bee8f6d722a8e22c8ac51dafa7faf3b5585536b443e9050610be8565b6009820361078d577f1d585d8e6fa2b1698a000c733e3c2c8a6baaf40166f82ee0412a266496bab85f9050610be8565b600a82036107bd577f2fa8177393423a5b0e68dbb8a555a9085464b5fe55219d377edb5a9a486b4f169050610be8565b600b82036107ed577f1e9dbba95cdde33d36bc0cee03f7ebeddd71cdc633451d996a9cb83bc4faccad9050610be8565b600c820361081d577f0adacfac36026ca9936dd2e4d540a947a1a2cb2ce7114ddcb24a3956eae548809050610be8565b600d820361084d577f1b08cd6df6cbf993b04b8b2e40882ca9aa48ca3afb074b88e52963f1c63f534b9050610be8565b600e820361087d577f086043d5906d53b339d340d39738f2037541c5440073a481feb8b1f513b1f61e9050610be8565b600f82036108ad577f06108b01607231776eb7debff2f99da31dd70f4bcbeccc251843de92456d94649050610be8565b601082036108dd577f10f9e234e1bb3ab0c5e979c489e0f82b08b74f4177a6fc85e08e5aac314de30e9050610be8565b6011820361090d577f0432ad8ddfeffc1e806be483a4172fd3389aee0d322d5d0211da447be542dc1e9050610be8565b6012820361093d577f06633a6d46c11662e3f69fcd309b73cc20bd47a870d778c20e661915874c2d309050610be8565b6013820361096d577f01a45cc8ac3691a5cab011322c3768c87051c572235a0cca492dff69096120779050610be8565b6014820361099d577f279add35717f68d654619ffb44243d67f2e1085ae096b87da5f4e03b12c0198f9050610be8565b601582036109cd577f14abf2e9cc1540de67faffd47b74b2ff21db44fd5909c2c6dc0a7910183672d19050610be8565b601682036109fd577f014d77e356b2fc343bad244a2c7b82793b1d407624237045b8cdb73e58be48049050610be8565b60178203610a2d577f10e949fa93056d968937b8b3990db726a22596ea35238a41af824cfa44d793099050610be8565b60188203610a5d577f19c69248dcc169fb60a3dc50f25cbcfeff75f9876e76a76c7cc3356eee4746ba9050610be8565b60198203610a8d577f126f559140de04a5b3074e0ecbb46c942fbf0fc1118e4cab0e509ec7942acdf49050610be8565b601a8203610abd577f015a03f1243d220d72e914a76f815a66d0fae19bf83f7ed126124bb718b456389050610be8565b601b8203610aed577f0d234d5a13d6451120bf427a97a64a01b86122bc7056c9db235b4708d6257fd99050610be8565b601c8203610b1d577f258f2eb745d4c7f43f7555fcd719408e4d484ed8ed1cf0a367410f24df079be09050610be8565b601d8203610b4d577f2a7a8cb5c71e208c985ef3da812d40201012fdb07883372822b0a5c8c5e46a6d9050610be8565b601e8203610b7d577f02dfa7a6426b9c6700075ef9d9a2a964f9e54e5643c78b14a6fddcff44e81e419050610be8565b601f8203610bad577f136e847efd90cf461eac4b58b7f0fde18cf8564730c0b56ee7919be0816679a59050610be8565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdf906115ff565b60405180910390fd5b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600060019054906101000a900463ffffffff1663ffffffff1603610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8a9061166b565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cec906116d7565b60405180910390fd5b60008060019054906101000a900463ffffffff169050600083905060008060005b60008054906101000a900460ff1660ff168160ff161015610e71576000600286610d409190611346565b63ffffffff1603610d7f57839250610d5a8160ff166105ac565b915083600160008360ff1660ff16815260200190815260200160002081905550610d9f565b600160008260ff1660ff1681526020019081526020016000205492508391505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329a5f2f66040518060400160405280868152602001858152506040518263ffffffff1660e01b8152600401610e0c91906117a2565b602060405180830381865afa158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d91906117d2565b9350600285610e5c91906117ff565b94508080610e6990611830565b915050610d16565b508260026000601e60ff16600060019054906101000a900463ffffffff16610e999190611346565b63ffffffff168152602001908152602001600020819055506000600181819054906101000a900463ffffffff1680929190610ed390611859565b91906101000a81548163ffffffff021916908363ffffffff160217905550506001600060019054906101000a900463ffffffff16610f119190611885565b945050505050919050565b600063ffffffff82169050919050565b610f3581610f1c565b82525050565b6000602082019050610f506000830184610f2c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8182610f56565b9050919050565b610f9181610f76565b82525050565b6000602082019050610fac6000830184610f88565b92915050565b600080fd5b600080fd5b6000819050919050565b610fcf81610fbc565b8114610fda57600080fd5b50565b600081359050610fec81610fc6565b92915050565b60006020828403121561100857611007610fb2565b5b600061101684828501610fdd565b91505092915050565b60008115159050919050565b6110348161101f565b82525050565b600060208201905061104f600083018461102b565b92915050565b61105e81610fbc565b82525050565b60006020820190506110796000830184611055565b92915050565b600060ff82169050919050565b6110958161107f565b82525050565b60006020820190506110b0600083018461108c565b92915050565b6000819050919050565b6110c9816110b6565b81146110d457600080fd5b50565b6000813590506110e6816110c0565b92915050565b6110f581610f76565b811461110057600080fd5b50565b600081359050611112816110ec565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261113d5761113c611118565b5b8235905067ffffffffffffffff81111561115a5761115961111d565b5b60208301915083600182028301111561117657611175611122565b5b9250929050565b60008060008060008060a0878903121561119a57611199610fb2565b5b60006111a889828a016110d7565b96505060206111b989828a01610fdd565b95505060406111ca89828a01611103565b94505060606111db89828a01610fdd565b935050608087013567ffffffffffffffff8111156111fc576111fb610fb7565b5b61120889828a01611127565b92509250509295509295509295565b6112208161107f565b811461122b57600080fd5b50565b60008135905061123d81611217565b92915050565b60006020828403121561125957611258610fb2565b5b60006112678482850161122e565b91505092915050565b60006020828403121561128657611285610fb2565b5b600061129484828501611103565b91505092915050565b6000819050919050565b60006112c26112bd6112b884610f56565b61129d565b610f56565b9050919050565b60006112d4826112a7565b9050919050565b60006112e6826112c9565b9050919050565b6112f6816112db565b82525050565b600060208201905061131160008301846112ed565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061135182610f1c565b915061135c83610f1c565b92508261136c5761136b611317565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113b182610f1c565b9150600082036113c4576113c3611377565b5b600182039050919050565b600082825260208201905092915050565b7f546f6b656e206973206e6f7420737570706f7274656400000000000000000000600082015250565b60006114166016836113cf565b9150611421826113e0565b602082019050919050565b6000602082019050818103600083015261144581611409565b9050919050565b60006060820190506114616000830186610f88565b61146e6020830185610f88565b61147b6040830184611055565b949350505050565b61148c8161101f565b811461149757600080fd5b50565b6000815190506114a981611483565b92915050565b6000602082840312156114c5576114c4610fb2565b5b60006114d38482850161149a565b91505092915050565b6114e5816110b6565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061152883856114eb565b93506115358385846114fc565b61153e8361150b565b840190509392505050565b600060c08201905061155e600083018a6114dc565b61156b6020830189611055565b6115786040830188610f88565b6115856060830187611055565b818103608083015261159881858761151c565b90506115a760a0830184610f2c565b98975050505050505050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b60006115e96013836113cf565b91506115f4826115b3565b602082019050919050565b60006020820190508181036000830152611618816115dc565b9050919050565b7f4d65726b6c6520747265652069732066756c6c00000000000000000000000000600082015250565b60006116556013836113cf565b91506116608261161f565b602082019050919050565b6000602082019050818103600083015261168481611648565b9050919050565b7f4c6561662068617320746f2062652077697468696e206669656c642073697a65600082015250565b60006116c16020836113cf565b91506116cc8261168b565b602082019050919050565b600060208201905081810360008301526116f0816116b4565b9050919050565b600060029050919050565b600081905092915050565b6000819050919050565b61172081610fbc565b82525050565b60006117328383611717565b60208301905092915050565b6000602082019050919050565b611754816116f7565b61175e8184611702565b92506117698261170d565b8060005b8381101561179a5781516117818782611726565b965061178c8361173e565b92505060018101905061176d565b505050505050565b60006040820190506117b7600083018461174b565b92915050565b6000815190506117cc81610fc6565b92915050565b6000602082840312156117e8576117e7610fb2565b5b60006117f6848285016117bd565b91505092915050565b600061180a82610f1c565b915061181583610f1c565b92508261182557611824611317565b5b828204905092915050565b600061183b8261107f565b915060ff820361184e5761184d611377565b5b600182019050919050565b600061186482610f1c565b915063ffffffff820361187a57611879611377565b5b600182019050919050565b600061189082610f1c565b915061189b83610f1c565b9250828210156118ae576118ad611377565b5b82820390509291505056fea26469706673582212202a7bb22be701ded135773f27a68ba1b5ffcf57eff682f9852c8a809deef186b964736f6c634300080d0033";

type WispConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WispConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wisp__factory extends ContractFactory {
  constructor(...args: WispConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _levels: PromiseOrValue<BigNumberish>,
    _hasher: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Wisp> {
    return super.deploy(
      _levels,
      _hasher,
      _verifier,
      _tokens,
      overrides || {}
    ) as Promise<Wisp>;
  }
  override getDeployTransaction(
    _levels: PromiseOrValue<BigNumberish>,
    _hasher: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _levels,
      _hasher,
      _verifier,
      _tokens,
      overrides || {}
    );
  }
  override attach(address: string): Wisp {
    return super.attach(address) as Wisp;
  }
  override connect(signer: Signer): Wisp__factory {
    return super.connect(signer) as Wisp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WispInterface {
    return new utils.Interface(_abi) as WispInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wisp {
    return new Contract(address, _abi, signerOrProvider) as Wisp;
  }
}
