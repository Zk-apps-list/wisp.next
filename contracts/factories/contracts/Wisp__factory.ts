/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Wisp, WispInterface } from "../../contracts/Wisp";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_levels",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "publicKey",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "Payment",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "publicKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encryptedData",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositVerifier",
    outputs: [
      {
        internalType: "contract DepositVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "isValidRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "levelHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSize",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260008060016101000a81548163ffffffff021916908363ffffffff1602179055503480156200003257600080fd5b5060405162002bbb38038062002bbb833981810160405281019062000058919062000b51565b838360008260ff1611620000a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009a9062000c43565b60405180910390fd5b60208260ff1610620000ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e39062000cdb565b60405180910390fd5b816000806101000a81548160ff021916908360ff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900460ff16600262000156919062000e90565b63ffffffff1660a08163ffffffff168152505060005b8260ff168160ff161015620001c2576200018f8160ff16620002a260201b60201c565b600160008360ff1660ff168152602001908152602001600020819055508080620001b99062000ec5565b9150506200016c565b5050508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505060005b81518160ff1610156200029757600160036000848460ff168151811062000228576200022762000ef3565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200028e9062000ec5565b915050620001fc565b505050505062000f94565b6000808203620002d5577f131d73cf6b30079aca0dff6a561cd0ee50b540879abe379a25a06b24bde2bebd905062000920565b6001820362000307577f030e41eb4c13eb3c7040201a76ec17a95b0696ae684c8711f643a82434043b85905062000920565b6002820362000339577f2de9e35e5e66734c46a160df81e56c83d8b7687ea37f6b4a27623a787127fad8905062000920565b600382036200036b577f1ee3ac3d5ea557aa6d9a6ea46262dc42af62bae8c7864a9cc8dfb493d54bba30905062000920565b600482036200039d577f0bef9271bdaa22ee892e75171bf1898983a6c8304ab78da111413a4105733219905062000920565b60058203620003cf577f1b4bb8a6696efaa2cd20d4b47bf9dc585280dec286f06aedd01583a58c783f51905062000920565b6006820362000401577f2aabe03c18f20b72f67ade3063f12d71ad671d375d797ba60dfac9d924f02708905062000920565b6007820362000433577f2daff101798c30998276c67457a7baaaaed141e6e49a2310deb01a71e3ec107d905062000920565b6008820362000465577f1cafdb09713bb57e4aed4bee8f6d722a8e22c8ac51dafa7faf3b5585536b443e905062000920565b6009820362000497577f1d585d8e6fa2b1698a000c733e3c2c8a6baaf40166f82ee0412a266496bab85f905062000920565b600a8203620004c9577f2fa8177393423a5b0e68dbb8a555a9085464b5fe55219d377edb5a9a486b4f16905062000920565b600b8203620004fb577f1e9dbba95cdde33d36bc0cee03f7ebeddd71cdc633451d996a9cb83bc4faccad905062000920565b600c82036200052d577f0adacfac36026ca9936dd2e4d540a947a1a2cb2ce7114ddcb24a3956eae54880905062000920565b600d82036200055f577f1b08cd6df6cbf993b04b8b2e40882ca9aa48ca3afb074b88e52963f1c63f534b905062000920565b600e820362000591577f086043d5906d53b339d340d39738f2037541c5440073a481feb8b1f513b1f61e905062000920565b600f8203620005c3577f06108b01607231776eb7debff2f99da31dd70f4bcbeccc251843de92456d9464905062000920565b60108203620005f5577f10f9e234e1bb3ab0c5e979c489e0f82b08b74f4177a6fc85e08e5aac314de30e905062000920565b6011820362000627577f0432ad8ddfeffc1e806be483a4172fd3389aee0d322d5d0211da447be542dc1e905062000920565b6012820362000659577f06633a6d46c11662e3f69fcd309b73cc20bd47a870d778c20e661915874c2d30905062000920565b601382036200068b577f01a45cc8ac3691a5cab011322c3768c87051c572235a0cca492dff6909612077905062000920565b60148203620006bd577f279add35717f68d654619ffb44243d67f2e1085ae096b87da5f4e03b12c0198f905062000920565b60158203620006ef577f14abf2e9cc1540de67faffd47b74b2ff21db44fd5909c2c6dc0a7910183672d1905062000920565b6016820362000721577f014d77e356b2fc343bad244a2c7b82793b1d407624237045b8cdb73e58be4804905062000920565b6017820362000753577f10e949fa93056d968937b8b3990db726a22596ea35238a41af824cfa44d79309905062000920565b6018820362000785577f19c69248dcc169fb60a3dc50f25cbcfeff75f9876e76a76c7cc3356eee4746ba905062000920565b60198203620007b7577f126f559140de04a5b3074e0ecbb46c942fbf0fc1118e4cab0e509ec7942acdf4905062000920565b601a8203620007e9577f015a03f1243d220d72e914a76f815a66d0fae19bf83f7ed126124bb718b45638905062000920565b601b82036200081b577f0d234d5a13d6451120bf427a97a64a01b86122bc7056c9db235b4708d6257fd9905062000920565b601c82036200084d577f258f2eb745d4c7f43f7555fcd719408e4d484ed8ed1cf0a367410f24df079be0905062000920565b601d82036200087f577f2a7a8cb5c71e208c985ef3da812d40201012fdb07883372822b0a5c8c5e46a6d905062000920565b601e8203620008b1577f02dfa7a6426b9c6700075ef9d9a2a964f9e54e5643c78b14a6fddcff44e81e41905062000920565b601f8203620008e3577f136e847efd90cf461eac4b58b7f0fde18cf8564730c0b56ee7919be0816679a5905062000920565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009179062000f72565b60405180910390fd5b919050565b6000604051905090565b600080fd5b600080fd5b600060ff82169050919050565b620009518162000939565b81146200095d57600080fd5b50565b600081519050620009718162000946565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009a48262000977565b9050919050565b620009b68162000997565b8114620009c257600080fd5b50565b600081519050620009d681620009ab565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000a2c82620009e1565b810181811067ffffffffffffffff8211171562000a4e5762000a4d620009f2565b5b80604052505050565b600062000a6362000925565b905062000a71828262000a21565b919050565b600067ffffffffffffffff82111562000a945762000a93620009f2565b5b602082029050602081019050919050565b600080fd5b600062000ac162000abb8462000a76565b62000a57565b9050808382526020820190506020840283018581111562000ae75762000ae662000aa5565b5b835b8181101562000b14578062000aff8882620009c5565b84526020840193505060208101905062000ae9565b5050509392505050565b600082601f83011262000b365762000b35620009dc565b5b815162000b4884826020860162000aaa565b91505092915050565b6000806000806080858703121562000b6e5762000b6d6200092f565b5b600062000b7e8782880162000960565b945050602062000b9187828801620009c5565b935050604062000ba487828801620009c5565b925050606085015167ffffffffffffffff81111562000bc85762000bc762000934565b5b62000bd68782880162000b1e565b91505092959194509250565b600082825260208201905092915050565b7f5f6c6576656c732073686f756c642062652067726561746572207468616e2030600082015250565b600062000c2b60208362000be2565b915062000c388262000bf3565b602082019050919050565b6000602082019050818103600083015262000c5e8162000c1c565b9050919050565b7f5f6c6576656c732073686f756c64206e6f74206265206772656174657220746860008201527f616e203332000000000000000000000000000000000000000000000000000000602082015250565b600062000cc360258362000be2565b915062000cd08262000c65565b604082019050919050565b6000602082019050818103600083015262000cf68162000cb4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000d8b5780860481111562000d635762000d6262000cfd565b5b600185161562000d735780820291505b808102905062000d838562000d2c565b945062000d43565b94509492505050565b60008262000da6576001905062000e79565b8162000db6576000905062000e79565b816001811462000dcf576002811462000dda5762000e10565b600191505062000e79565b60ff84111562000def5762000dee62000cfd565b5b8360020a91508482111562000e095762000e0862000cfd565b5b5062000e79565b5060208310610133831016604e8410600b841016171562000e4a5782820a90508381111562000e445762000e4362000cfd565b5b62000e79565b62000e59848484600162000d39565b9250905081840481111562000e735762000e7262000cfd565b5b81810290505b9392505050565b600063ffffffff82169050919050565b600062000e9d8262000e80565b915062000eaa8362000939565b925062000ebd63ffffffff848462000d94565b905092915050565b600062000ed28262000939565b915060ff820362000ee85762000ee762000cfd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b600062000f5a60138362000be2565b915062000f678262000f22565b602082019050919050565b6000602082019050818103600083015262000f8d8162000f4b565b9050919050565b60805160a05160c051611be262000fd9600039600081816102d801526104c90152600081816102b40152610d77015260008181610d510152610f030152611be26000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639eaa51c51161008c578063ce7597c911610066578063ce7597c914610204578063e486033914610234578063e829558814610264578063ed33639f14610294576100cf565b80639eaa51c51461019a578063c2b40ae4146101b6578063cd87a3b4146101e6576100cf565b80632565b159146100d457806326120c88146100f25780632986c0e5146101105780632cdabbce1461012e578063414a37ba1461015e5780634ecf518b1461017c575b600080fd5b6100dc6102b2565b6040516100e9919061109d565b60405180910390f35b6100fa6102d6565b6040516101079190611137565b60405180910390f35b6101186102fa565b604051610125919061109d565b60405180910390f35b61014860048036038101906101439190611192565b610310565b60405161015591906111da565b60405180910390f35b6101666103bc565b6040516101739190611204565b60405180910390f35b6101846103e0565b604051610191919061123b565b60405180910390f35b6101b460048036038101906101af91906112f9565b6103f1565b005b6101d060048036038101906101cb9190611192565b6106b9565b6040516101dd9190611204565b60405180910390f35b6101ee6106d1565b6040516101fb919061123b565b60405180910390f35b61021e600480360381019061021991906113f4565b6106d6565b60405161022b9190611204565b60405180910390f35b61024e60048036038101906102499190611421565b6106ee565b60405161025b91906111da565b60405180910390f35b61027e60048036038101906102799190611192565b61070e565b60405161028b9190611204565b60405180910390f35b61029c610d4f565b6040516102a9919061146f565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060019054906101000a900463ffffffff1681565b600080820361032257600090506103b7565b6000601e60ff16600060019054906101000a900463ffffffff1661034691906114b9565b905060008190505b83600260008363ffffffff1681526020019081526020016000205403610379576001925050506103b7565b60008163ffffffff160361038f57601e60ff1690505b808061039a90611519565b9150508163ffffffff168163ffffffff160361034e576000925050505b919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900460ff1681565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104749061159f565b60405180910390fd5b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183836040516104b09291906115fe565b604051809103902060001c6104c59190611617565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632be688d48a8a6040518060a001604052808c81526020018b81526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff168152602001868152506040518463ffffffff1660e01b815260040161056093929190611742565b602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a191906117a0565b6105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d790611819565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161061d93929190611848565b6020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066091906117a0565b50600061066c88610d73565b90507f1d9cdbb82f9b7828339f89da62e1a48207663efd781b35256fa36659957dde8087898686856040516106a595949392919061187f565b60405180910390a150505050505050505050565b60026020528060005260406000206000915090505481565b601e81565b60016020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900460ff1681565b600080820361073f577f131d73cf6b30079aca0dff6a561cd0ee50b540879abe379a25a06b24bde2bebd9050610d4a565b6001820361076f577f030e41eb4c13eb3c7040201a76ec17a95b0696ae684c8711f643a82434043b859050610d4a565b6002820361079f577f2de9e35e5e66734c46a160df81e56c83d8b7687ea37f6b4a27623a787127fad89050610d4a565b600382036107cf577f1ee3ac3d5ea557aa6d9a6ea46262dc42af62bae8c7864a9cc8dfb493d54bba309050610d4a565b600482036107ff577f0bef9271bdaa22ee892e75171bf1898983a6c8304ab78da111413a41057332199050610d4a565b6005820361082f577f1b4bb8a6696efaa2cd20d4b47bf9dc585280dec286f06aedd01583a58c783f519050610d4a565b6006820361085f577f2aabe03c18f20b72f67ade3063f12d71ad671d375d797ba60dfac9d924f027089050610d4a565b6007820361088f577f2daff101798c30998276c67457a7baaaaed141e6e49a2310deb01a71e3ec107d9050610d4a565b600882036108bf577f1cafdb09713bb57e4aed4bee8f6d722a8e22c8ac51dafa7faf3b5585536b443e9050610d4a565b600982036108ef577f1d585d8e6fa2b1698a000c733e3c2c8a6baaf40166f82ee0412a266496bab85f9050610d4a565b600a820361091f577f2fa8177393423a5b0e68dbb8a555a9085464b5fe55219d377edb5a9a486b4f169050610d4a565b600b820361094f577f1e9dbba95cdde33d36bc0cee03f7ebeddd71cdc633451d996a9cb83bc4faccad9050610d4a565b600c820361097f577f0adacfac36026ca9936dd2e4d540a947a1a2cb2ce7114ddcb24a3956eae548809050610d4a565b600d82036109af577f1b08cd6df6cbf993b04b8b2e40882ca9aa48ca3afb074b88e52963f1c63f534b9050610d4a565b600e82036109df577f086043d5906d53b339d340d39738f2037541c5440073a481feb8b1f513b1f61e9050610d4a565b600f8203610a0f577f06108b01607231776eb7debff2f99da31dd70f4bcbeccc251843de92456d94649050610d4a565b60108203610a3f577f10f9e234e1bb3ab0c5e979c489e0f82b08b74f4177a6fc85e08e5aac314de30e9050610d4a565b60118203610a6f577f0432ad8ddfeffc1e806be483a4172fd3389aee0d322d5d0211da447be542dc1e9050610d4a565b60128203610a9f577f06633a6d46c11662e3f69fcd309b73cc20bd47a870d778c20e661915874c2d309050610d4a565b60138203610acf577f01a45cc8ac3691a5cab011322c3768c87051c572235a0cca492dff69096120779050610d4a565b60148203610aff577f279add35717f68d654619ffb44243d67f2e1085ae096b87da5f4e03b12c0198f9050610d4a565b60158203610b2f577f14abf2e9cc1540de67faffd47b74b2ff21db44fd5909c2c6dc0a7910183672d19050610d4a565b60168203610b5f577f014d77e356b2fc343bad244a2c7b82793b1d407624237045b8cdb73e58be48049050610d4a565b60178203610b8f577f10e949fa93056d968937b8b3990db726a22596ea35238a41af824cfa44d793099050610d4a565b60188203610bbf577f19c69248dcc169fb60a3dc50f25cbcfeff75f9876e76a76c7cc3356eee4746ba9050610d4a565b60198203610bef577f126f559140de04a5b3074e0ecbb46c942fbf0fc1118e4cab0e509ec7942acdf49050610d4a565b601a8203610c1f577f015a03f1243d220d72e914a76f815a66d0fae19bf83f7ed126124bb718b456389050610d4a565b601b8203610c4f577f0d234d5a13d6451120bf427a97a64a01b86122bc7056c9db235b4708d6257fd99050610d4a565b601c8203610c7f577f258f2eb745d4c7f43f7555fcd719408e4d484ed8ed1cf0a367410f24df079be09050610d4a565b601d8203610caf577f2a7a8cb5c71e208c985ef3da812d40201012fdb07883372822b0a5c8c5e46a6d9050610d4a565b601e8203610cdf577f02dfa7a6426b9c6700075ef9d9a2a964f9e54e5643c78b14a6fddcff44e81e419050610d4a565b601f8203610d0f577f136e847efd90cf461eac4b58b7f0fde18cf8564730c0b56ee7919be0816679a59050610d4a565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4190611919565b60405180910390fd5b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600060019054906101000a900463ffffffff1663ffffffff1603610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec90611985565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610e57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4e906119f1565b60405180910390fd5b60008060019054906101000a900463ffffffff169050600083905060008060005b60008054906101000a900460ff1660ff168160ff161015610fd3576000600286610ea291906114b9565b63ffffffff1603610ee157839250610ebc8160ff1661070e565b915083600160008360ff1660ff16815260200190815260200160002081905550610f01565b600160008260ff1660ff1681526020019081526020016000205492508391505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329a5f2f66040518060400160405280868152602001858152506040518263ffffffff1660e01b8152600401610f6e9190611a95565b602060405180830381865afa158015610f8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faf9190611ac5565b9350600285610fbe9190611af2565b94508080610fcb90611b23565b915050610e78565b508260026000601e60ff16600060019054906101000a900463ffffffff16610ffb91906114b9565b63ffffffff168152602001908152602001600020819055506000600181819054906101000a900463ffffffff168092919061103590611b4c565b91906101000a81548163ffffffff021916908363ffffffff160217905550506001600060019054906101000a900463ffffffff166110739190611b78565b945050505050919050565b600063ffffffff82169050919050565b6110978161107e565b82525050565b60006020820190506110b2600083018461108e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110fd6110f86110f3846110b8565b6110d8565b6110b8565b9050919050565b600061110f826110e2565b9050919050565b600061112182611104565b9050919050565b61113181611116565b82525050565b600060208201905061114c6000830184611128565b92915050565b600080fd5b600080fd5b6000819050919050565b61116f8161115c565b811461117a57600080fd5b50565b60008135905061118c81611166565b92915050565b6000602082840312156111a8576111a7611152565b5b60006111b68482850161117d565b91505092915050565b60008115159050919050565b6111d4816111bf565b82525050565b60006020820190506111ef60008301846111cb565b92915050565b6111fe8161115c565b82525050565b600060208201905061121960008301846111f5565b92915050565b600060ff82169050919050565b6112358161121f565b82525050565b6000602082019050611250600083018461122c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261127b5761127a611256565b5b8235905067ffffffffffffffff8111156112985761129761125b565b5b6020830191508360018202830111156112b4576112b3611260565b5b9250929050565b60006112c6826110b8565b9050919050565b6112d6816112bb565b81146112e157600080fd5b50565b6000813590506112f3816112cd565b92915050565b60008060008060008060008060c0898b03121561131957611318611152565b5b600089013567ffffffffffffffff81111561133757611336611157565b5b6113438b828c01611265565b985098505060206113568b828c0161117d565b96505060406113678b828c0161117d565b95505060606113788b828c0161117d565b94505060806113898b828c016112e4565b93505060a089013567ffffffffffffffff8111156113aa576113a9611157565b5b6113b68b828c01611265565b92509250509295985092959890939650565b6113d18161121f565b81146113dc57600080fd5b50565b6000813590506113ee816113c8565b92915050565b60006020828403121561140a57611409611152565b5b6000611418848285016113df565b91505092915050565b60006020828403121561143757611436611152565b5b6000611445848285016112e4565b91505092915050565b600061145982611104565b9050919050565b6114698161144e565b82525050565b60006020820190506114846000830184611460565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114c48261107e565b91506114cf8361107e565b9250826114df576114de61148a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115248261107e565b915060008203611537576115366114ea565b5b600182039050919050565b600082825260208201905092915050565b7f546f6b656e206973206e6f7420737570706f7274656400000000000000000000600082015250565b6000611589601683611542565b915061159482611553565b602082019050919050565b600060208201905081810360008301526115b88161157c565b9050919050565b600081905092915050565b82818337600083830152505050565b60006115e583856115bf565b93506115f28385846115ca565b82840190509392505050565b600061160b8284866115d9565b91508190509392505050565b60006116228261115c565b915061162d8361115c565b92508261163d5761163c61148a565b5b828206905092915050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b60006116768385611648565b93506116838385846115ca565b61168c83611659565b840190509392505050565b600060059050919050565b600081905092915050565b6000819050919050565b6116c08161115c565b82525050565b60006116d283836116b7565b60208301905092915050565b6000602082019050919050565b6116f481611697565b6116fe81846116a2565b9250611709826116ad565b8060005b8381101561173a57815161172187826116c6565b965061172c836116de565b92505060018101905061170d565b505050505050565b600060c082019050818103600083015261175d81858761166a565b905061176c60208301846116eb565b949350505050565b61177d816111bf565b811461178857600080fd5b50565b60008151905061179a81611774565b92915050565b6000602082840312156117b6576117b5611152565b5b60006117c48482850161178b565b91505092915050565b7f4465706f736974206973206e6f742076616c6964000000000000000000000000600082015250565b6000611803601483611542565b915061180e826117cd565b602082019050919050565b60006020820190508181036000830152611832816117f6565b9050919050565b611842816112bb565b82525050565b600060608201905061185d6000830186611839565b61186a6020830185611839565b61187760408301846111f5565b949350505050565b600060808201905061189460008301886111f5565b6118a160208301876111f5565b81810360408301526118b481858761166a565b90506118c3606083018461108e565b9695505050505050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000611903601383611542565b915061190e826118cd565b602082019050919050565b60006020820190508181036000830152611932816118f6565b9050919050565b7f4d65726b6c6520747265652069732066756c6c00000000000000000000000000600082015250565b600061196f601383611542565b915061197a82611939565b602082019050919050565b6000602082019050818103600083015261199e81611962565b9050919050565b7f4c6561662068617320746f2062652077697468696e206669656c642073697a65600082015250565b60006119db602083611542565b91506119e6826119a5565b602082019050919050565b60006020820190508181036000830152611a0a816119ce565b9050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b611a4781611a11565b611a518184611a1c565b9250611a5c82611a27565b8060005b83811015611a8d578151611a7487826116c6565b9650611a7f83611a31565b925050600181019050611a60565b505050505050565b6000604082019050611aaa6000830184611a3e565b92915050565b600081519050611abf81611166565b92915050565b600060208284031215611adb57611ada611152565b5b6000611ae984828501611ab0565b91505092915050565b6000611afd8261107e565b9150611b088361107e565b925082611b1857611b1761148a565b5b828204905092915050565b6000611b2e8261121f565b915060ff8203611b4157611b406114ea565b5b600182019050919050565b6000611b578261107e565b915063ffffffff8203611b6d57611b6c6114ea565b5b600182019050919050565b6000611b838261107e565b9150611b8e8361107e565b925082821015611ba157611ba06114ea565b5b82820390509291505056fea2646970667358221220cc4abb3aebaf47492fb992fd3e66faee44f330a5fcd9a51b26c3a9111b30b36264736f6c634300080d0033";

type WispConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WispConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wisp__factory extends ContractFactory {
  constructor(...args: WispConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _levels: PromiseOrValue<BigNumberish>,
    _hasher: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Wisp> {
    return super.deploy(
      _levels,
      _hasher,
      _verifier,
      _tokens,
      overrides || {}
    ) as Promise<Wisp>;
  }
  override getDeployTransaction(
    _levels: PromiseOrValue<BigNumberish>,
    _hasher: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _levels,
      _hasher,
      _verifier,
      _tokens,
      overrides || {}
    );
  }
  override attach(address: string): Wisp {
    return super.attach(address) as Wisp;
  }
  override connect(signer: Signer): Wisp__factory {
    return super.connect(signer) as Wisp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WispInterface {
    return new utils.Interface(_abi) as WispInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wisp {
    return new Contract(address, _abi, signerOrProvider) as Wisp;
  }
}
